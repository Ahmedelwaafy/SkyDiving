@use "./boilerplate" as var;

/**NavBar  *******************************************/
.hamburger {
  cursor: pointer;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  /* The size of the SVG defines the overall size */
  height: 3em;
  /* Define the transition for transforming the SVG */
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  //stroke: white;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  /* Define the transition for transforming the Stroke */
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}

/**Mobile Menu Height*/
.h-mobile-menu {
  height: calc(100vh - 80px);
}

.cursive-text {
  -webkit-text-fill-color: transparent;
  -webkit-text-stroke-width: 2px;
  -webkit-text-stroke-color: var.$bg;
}

/**Hero cta-------------*/

.hero-cta {
  font-size: 15px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.3s;
  font-weight: bolder;
  box-shadow: 0 2px 0 2px var.$secondary;
}

.hero-cta:before {
  content: "";
  position: absolute;
  width: 100px;
  height: 120%;
  background-color: #ff6700;
  top: 50%;
  transform: skewX(30deg) translate(-150%, -50%);
  transition: all 0.5s;
}

.hero-cta:hover {
  background-color: #4cc9f0;
  background-color: var.$secondary;
  color: #fff;
  box-shadow: 0 2px 0 2px #0d3b66;
}

.hero-cta:hover::before {
  transform: skewX(30deg) translate(150%, -50%);
  transition-delay: 0.1s;
}

.hero-cta:active {
  transform: scale(0.9);
}

/** Calendar --- hide native calendar icon and put another icon above it with pointer events none---------*/
input[type="date"] {
  &::-webkit-calendar-picker-indicator {
    cursor: pointer;
    opacity: 0;
    //background-color: red;
    color: green;
  }
}

/* hide native input type number arrows **/
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  -moz-appearance: textfield;
}

/** hide calendar icon on firefox*/
@-moz-document url-prefix() {
  .calendar-icon {
    display: none;
  }
}

@supports (-moz-appearance: none) {
  .calendar-icon {
    display: none;
  }
}

.slick-slide > div {
  margin-inline: 25px;
  display: flex;
  justify-content: center;
}

/**Footer ------------*/

.grid-auto-fit {
  width: min(90%, 1300px);
  margin-inline: auto;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  justify-items: center;
}

//! hero observer styles
.hide {
  opacity: 0;
  transform: translateY(-50px);
  transition: all 1s ease-in-out;
}
.hero-title {
  transition-delay: 0.1s;
}

.hero-sub-title {
  transition-delay: 0.5s;
}
.hero-sub-title-span {
  transition-delay: 1.3s;
}
.visible {
  opacity: 1;
  transform: translateY(0);
}

.btn-form-observer {
  opacity: 0;
  transform: translateY(-50px);
  transition: all 1s ease-in-out;
}

.btn-delay {
  transition-delay: 0.7s;
}

.form-delay {
  transition-delay: 0.5s;
}

.btn-form-observer.visible {
  opacity: 1;
  transform: translateY(0);
}

//! main slider observer styles

.above-slider-observer {
  opacity: 0;
  transition: all 1s ease-in-out;
}
.main-slider-arrows {
  transform: translateX(80px);
}
.main-slider-title {
  transform: translateX(-80px);
}

.hero-sub-title-span {
  transition-delay: 1.3s;
}
.above-slider-visible {
  opacity: 1;
  transform: translateX(0);
}

.main-slider {
  opacity: 0;
  transform: translateY(-50px);
  transition: all 1s ease-in-out;
}

.main-slider-visible {
  opacity: 1;
  transform: translateY(0);
}

footer {
  opacity: 0;
  transform: translateY(50px);
  transition: all 1s ease-in-out;
}

.footer-visible {
  opacity: 1;
  transform: translateY(0);
}
